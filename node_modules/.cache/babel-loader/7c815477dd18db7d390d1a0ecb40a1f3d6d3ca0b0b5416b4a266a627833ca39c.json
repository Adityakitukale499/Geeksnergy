{"ast":null,"code":"import React from\"react\";import{BiSolidUpArrow,BiSolidDownArrow}from\"react-icons/bi\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Card=_ref=>{let{title,poster,director,genre,stars,pageViews,totalVoted,releasedDate,runTime=123,language=\"English\"}=_ref;const date=new Date(releasedDate*1000);const formattedDate=new Intl.DateTimeFormat(\"en-US\",{// year: \"numeric\",\nmonth:\"short\",day:\"2-digit\"}).format(date);const starsCombined=stars.join(\"\");const movieStars=starsCombined.length<20?stars.join(\", \"):\"\".concat(starsCombined.slice(0,20),\" ...\");return/*#__PURE__*/_jsxs(\"div\",{className:\"movie-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"votes\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(BiSolidUpArrow,{})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:totalVoted})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(BiSolidDownArrow,{})}),/*#__PURE__*/_jsx(\"div\",{children:\"Votes\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"img\",children:/*#__PURE__*/_jsx(\"img\",{src:poster,alt:\"movie\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Genre\"}),\" : \",genre]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Director\"}),\" : \",director]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Starring\"}),\" : \",movieStars]}),/*#__PURE__*/_jsxs(\"p\",{children:[runTime,\" mins | \",language,\" | \",formattedDate]}),/*#__PURE__*/_jsxs(\"p\",{className:\"detail-vote\",children:[pageViews,\" views | Voted by \",totalVoted,\" people\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"watch-now-btn\",children:\"Wathch Now\"})]})]});};export default Card;","map":{"version":3,"names":["React","BiSolidUpArrow","BiSolidDownArrow","jsx","_jsx","jsxs","_jsxs","Card","_ref","title","poster","director","genre","stars","pageViews","totalVoted","releasedDate","runTime","language","date","Date","formattedDate","Intl","DateTimeFormat","month","day","format","starsCombined","join","movieStars","length","concat","slice","className","children","src","alt"],"sources":["C:/Users/Aditya Kitukale/Downloads/geeksynergy-technologies-assignment-main/geeksynergy-technologies-assignment-main/src/components/pages/Card.jsx"],"sourcesContent":["import React from \"react\";\nimport { BiSolidUpArrow, BiSolidDownArrow } from \"react-icons/bi\";\n\nconst Card = ({\n  title,\n  poster,\n  director,\n  genre,\n  stars,\n  pageViews,\n  totalVoted,\n  releasedDate,\n  runTime = 123,\n  language = \"English\",\n}) => {\n  const date = new Date(releasedDate * 1000);\n  const formattedDate = new Intl.DateTimeFormat(\"en-US\", {\n    // year: \"numeric\",\n    month: \"short\",\n    day: \"2-digit\",\n  }).format(date);\n\n  const starsCombined = stars.join(\"\");\n  const movieStars =\n    starsCombined.length < 20\n      ? stars.join(\", \")\n      : `${starsCombined.slice(0, 20)} ...`;\n\n  return (\n    <div className=\"movie-card\">\n      <div className=\"votes\">\n        <div>\n          <BiSolidUpArrow />\n        </div>\n        <div>\n          <p>{totalVoted}</p>\n        </div>\n        <div>\n          <BiSolidDownArrow />\n        </div>\n        <div>Votes</div>\n      </div>\n      <div className=\"img\">\n        <img src={poster} alt=\"movie\" />\n      </div>\n      <div className=\"details\">\n        <h2>{title}</h2>\n        <p>\n          <span>Genre</span> : {genre}\n        </p>\n        <p>\n          <span>Director</span> : {director}\n        </p>\n        <p>\n          <span>Starring</span> : {movieStars}\n        </p>\n        <p>\n          {runTime} mins | {language} | {formattedDate}\n        </p>\n        <p className=\"detail-vote\">\n          {pageViews} views | Voted by {totalVoted} people\n        </p>\n        <button className=\"watch-now-btn\">Wathch Now</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,cAAc,CAAEC,gBAAgB,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElE,KAAM,CAAAC,IAAI,CAAGC,IAAA,EAWP,IAXQ,CACZC,KAAK,CACLC,MAAM,CACNC,QAAQ,CACRC,KAAK,CACLC,KAAK,CACLC,SAAS,CACTC,UAAU,CACVC,YAAY,CACZC,OAAO,CAAG,GAAG,CACbC,QAAQ,CAAG,SACb,CAAC,CAAAV,IAAA,CACC,KAAM,CAAAW,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACJ,YAAY,CAAG,IAAI,CAAC,CAC1C,KAAM,CAAAK,aAAa,CAAG,GAAI,CAAAC,IAAI,CAACC,cAAc,CAAC,OAAO,CAAE,CACrD;AACAC,KAAK,CAAE,OAAO,CACdC,GAAG,CAAE,SACP,CAAC,CAAC,CAACC,MAAM,CAACP,IAAI,CAAC,CAEf,KAAM,CAAAQ,aAAa,CAAGd,KAAK,CAACe,IAAI,CAAC,EAAE,CAAC,CACpC,KAAM,CAAAC,UAAU,CACdF,aAAa,CAACG,MAAM,CAAG,EAAE,CACrBjB,KAAK,CAACe,IAAI,CAAC,IAAI,CAAC,IAAAG,MAAA,CACbJ,aAAa,CAACK,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,QAAM,CAEzC,mBACE1B,KAAA,QAAK2B,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB5B,KAAA,QAAK2B,SAAS,CAAC,OAAO,CAAAC,QAAA,eACpB9B,IAAA,QAAA8B,QAAA,cACE9B,IAAA,CAACH,cAAc,GAAE,CAAC,CACf,CAAC,cACNG,IAAA,QAAA8B,QAAA,cACE9B,IAAA,MAAA8B,QAAA,CAAInB,UAAU,CAAI,CAAC,CAChB,CAAC,cACNX,IAAA,QAAA8B,QAAA,cACE9B,IAAA,CAACF,gBAAgB,GAAE,CAAC,CACjB,CAAC,cACNE,IAAA,QAAA8B,QAAA,CAAK,OAAK,CAAK,CAAC,EACb,CAAC,cACN9B,IAAA,QAAK6B,SAAS,CAAC,KAAK,CAAAC,QAAA,cAClB9B,IAAA,QAAK+B,GAAG,CAAEzB,MAAO,CAAC0B,GAAG,CAAC,OAAO,CAAE,CAAC,CAC7B,CAAC,cACN9B,KAAA,QAAK2B,SAAS,CAAC,SAAS,CAAAC,QAAA,eACtB9B,IAAA,OAAA8B,QAAA,CAAKzB,KAAK,CAAK,CAAC,cAChBH,KAAA,MAAA4B,QAAA,eACE9B,IAAA,SAAA8B,QAAA,CAAM,OAAK,CAAM,CAAC,MAAG,CAACtB,KAAK,EAC1B,CAAC,cACJN,KAAA,MAAA4B,QAAA,eACE9B,IAAA,SAAA8B,QAAA,CAAM,UAAQ,CAAM,CAAC,MAAG,CAACvB,QAAQ,EAChC,CAAC,cACJL,KAAA,MAAA4B,QAAA,eACE9B,IAAA,SAAA8B,QAAA,CAAM,UAAQ,CAAM,CAAC,MAAG,CAACL,UAAU,EAClC,CAAC,cACJvB,KAAA,MAAA4B,QAAA,EACGjB,OAAO,CAAC,UAAQ,CAACC,QAAQ,CAAC,KAAG,CAACG,aAAa,EAC3C,CAAC,cACJf,KAAA,MAAG2B,SAAS,CAAC,aAAa,CAAAC,QAAA,EACvBpB,SAAS,CAAC,oBAAkB,CAACC,UAAU,CAAC,SAC3C,EAAG,CAAC,cACJX,IAAA,WAAQ6B,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,YAAU,CAAQ,CAAC,EAClD,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA3B,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}